#spring:
#  application:
#    name: user-service
#  rabbitmq:
#    host: 43.201.185.6
#    port: 5672
#    username: guest
#    password: guest

#eureka:
#  instance:
#    instance-id: user-microservice-instance
#
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://3.35.145.182/eureka

security:
  jwt:
    expired: 3600
    secretkey: 8EF6D35BC965E6BC62A225B3B23E398E

spring:
  datasource:
    url: jdbc:mysql://localhost:3307/user-service
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  threads:
    virtual:
      enabled: true

  kafka:
    bootstrap-servers: localhost:9091
    producer:
      client-id: user-producer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      retries: 1
#      batch-size: 16384
#      buffer-memory: 33554432
      compression-type: snappy
    properties:
      ssl.endpoint.identification.algorithm: https
      sasl.mechanism: PLAIN
      request.timeout.ms: 20000
      security.protocol: SASL_SSL
      retry.backoff.ms: 500
      spring.json.add.type.headers: false

kafka-topic:
  user:
    login: user.login
#    consumer:
#      group-id: user-service
#      auto-offset-reset: latest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      properties:
#        spring:
#          deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
#          json:
#            trusted.packages: "*"
#            type.mapping: "com.example.userservice.*"
