plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
//	set('springCloudVersion', "2021.0.7")
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation('org.springframework.boot:spring-boot-starter-web') {
		exclude module: 'spring-boot-starter-tomcat'
	}
	implementation('org.springframework.boot:spring-boot-starter-undertow')
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.mysql:mysql-connector-j'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// spring kafka
//	implementation 'org.springframework.kafka:spring-kafka'

	// spring cloud
//	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
//	implementation 'org.springframework.cloud:spring-cloud-starter-config'
//	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
}

//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//	}
//}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

jib { // https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin
	from {
		//https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#from-closure
		//https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#setting-the-base-image
		image = 'eclipse-temurin:17-jre'
	}
	container {
		creationTime = "USE_CURRENT_TIMESTAMP"
	}
}